### ðŸš€Challenge 4: Benchmark Blitz: GPU Performance Testing with Qwen3

**Your Mission:**

Create a benchmark by running Qwen3 for 5 minutes. The output should be a number that makes the GPU comparable with other GPUs. The difficult part of the challenge is finding a way to use as many cores of the GPU as possible. In the end, no matter which NVIDIA GPU you choose, it should be possible to run this benchmark to see what the best GPU for a model is.

**The objective of the benchmark is twofold:**

1. Model performance on a certain GPU type
2. Check the GPU health

**What Youâ€™ll Build:**

You use vllm or other software to efficiently run Qwen3-0.6B (https://huggingface.co/Qwen/Qwen3-0.6B) in a benchmark. See the code here: https://github.com/yachty66/gpu-benchmark/blob/main/src/gpu_benchmark/benchmarks/qwen3_0_6b.py - yours could look similar. however keep in mind that the current code has issues since it doesnt use all the cores of a GPU and therefore is a not perfect benchmark.

**Evaluation Metrics:**

Compare the performance of the H200 and 5090. The H200 should perform better if you did it right. With the current implementation https://github.com/yachty66/gpu-benchmark/blob/main/src/gpu_benchmark/benchmarks/qwen3_0_6b.py, the 5090 outperforms the H200, which should not be the case.

**We Provide:**

- RTX 5090 via United Compute Cloud
- For the evaluation, i.e., the comparison between the 5090 and H200 for your benchmark, please reach out to the United Compute team. We will have access to an H200, but it's not supported on our cloud platform yet.

I have participated in a Hackathon where I have the above challenge and I have an application which is 

dwani.ai - knowledge through voice
Overview
dwani.ai is a self-hosted GenAI platform designed to provide voice AI interaction for Kannada and other Indian languages.

Website -> dwani.ai

Download App on Google Play

Research Goals
Measure and improve the Time to First Token Generation (TTFTG) for model architectures in ASR, Translation, and TTS systems.
Develop and enhance a Kannada voice model that meets industry standards set by OpenAI, Google, ElevenLabs, xAI
Create robust voice solutions for Indian languages, with a specific emphasis on Kannada.
Models and Tools
The project utilizes the following open-source tools:

Open-Source Tool	Source Repository
Automatic Speech Recognition : ASR	ASR Indic Server
Text to Speech : TTS	TTS Indic Server
Translation	Indic Translate Server
Document Parser	Indic Document Server
dwani inference Server	Dwani Server
dwani Android	Android
Features
Feature	Description	Components
Kannada Voice AI	Provides answers to voice queries using a LLM	LLM
Text Translate	Translates text from one language to another.	Translation
Text Query	Allows querying text data for specific information.	LLM
Voice to Text Translation	Converts spoken language to text and translates it.	ASR, Translation
PDF Translate	Translates content from PDF documents.	
Text to Speech	Generates speech from text.	TTS
Voice to Voice Translation	Converts spoken language to text, translates it, and then generates speech.	ASR, Translation, TTS
Answer Engine with Translate	Provides answers to queries with translation capabilities.	ASR, LLM, Translation, TTS
Contact
For any questions or issues, please open an issue on GitHub or contact us via email.
For collaborations
Join the discord group - invite link
For business queries, Email : sachin (at) dwani (dot) ai

How can I solve the problem using the above hackathon and give me some insigths